{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8723277,"sourceType":"datasetVersion","datasetId":5234819}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"Step 1 - To understand the given problem statement..\n    the problem here is to eamine the Sonar vs mine prediction. This problem falls under \n    Machine learning classification","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Step 2 - to understand the Data Statement..\n   The project is based on SONAR return data. Each data point consists of a set of 60 numerical values ranging between 0 to 1 representing the energy within specific frequency bands over time. The labels are 'M' for mines and 'R' for rock. The numbers in the labels are in increasing order of aspect angle, but they do not encode the angle directly.henceforth, here we need to examine the sonar data and based on that a prediction will generated that whether its rock or mines.\n\n","metadata":{}},{"cell_type":"code","source":"Now is time to import files...","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.metrics import accuracy_score\n","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:31:36.283840Z","iopub.execute_input":"2024-06-21T11:31:36.284191Z","iopub.status.idle":"2024-06-21T11:31:37.415879Z","shell.execute_reply.started":"2024-06-21T11:31:36.284163Z","shell.execute_reply":"2024-06-21T11:31:37.414855Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"df=pd.read_csv(\"/kaggle/input/sonar-vs-my-prediction/Day1_Data_Sonar_Data.csv\",header=None)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:31:45.874373Z","iopub.execute_input":"2024-06-21T11:31:45.874937Z","iopub.status.idle":"2024-06-21T11:31:45.900335Z","shell.execute_reply.started":"2024-06-21T11:31:45.874891Z","shell.execute_reply":"2024-06-21T11:31:45.899489Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-21T09:40:13.230101Z","iopub.execute_input":"2024-06-21T09:40:13.230493Z","iopub.status.idle":"2024-06-21T09:40:13.271843Z","shell.execute_reply.started":"2024-06-21T09:40:13.230462Z","shell.execute_reply":"2024-06-21T09:40:13.270891Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"       0       1       2       3       4       5       6       7       8   \\\n0  0.0200  0.0371  0.0428  0.0207  0.0954  0.0986  0.1539  0.1601  0.3109   \n1  0.0453  0.0523  0.0843  0.0689  0.1183  0.2583  0.2156  0.3481  0.3337   \n2  0.0262  0.0582  0.1099  0.1083  0.0974  0.2280  0.2431  0.3771  0.5598   \n3  0.0100  0.0171  0.0623  0.0205  0.0205  0.0368  0.1098  0.1276  0.0598   \n4  0.0762  0.0666  0.0481  0.0394  0.0590  0.0649  0.1209  0.2467  0.3564   \n\n       9   ...      51      52      53      54      55      56      57  \\\n0  0.2111  ...  0.0027  0.0065  0.0159  0.0072  0.0167  0.0180  0.0084   \n1  0.2872  ...  0.0084  0.0089  0.0048  0.0094  0.0191  0.0140  0.0049   \n2  0.6194  ...  0.0232  0.0166  0.0095  0.0180  0.0244  0.0316  0.0164   \n3  0.1264  ...  0.0121  0.0036  0.0150  0.0085  0.0073  0.0050  0.0044   \n4  0.4459  ...  0.0031  0.0054  0.0105  0.0110  0.0015  0.0072  0.0048   \n\n       58      59  60  \n0  0.0090  0.0032   R  \n1  0.0052  0.0044   R  \n2  0.0095  0.0078   R  \n3  0.0040  0.0117   R  \n4  0.0107  0.0094   R  \n\n[5 rows x 61 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>51</th>\n      <th>52</th>\n      <th>53</th>\n      <th>54</th>\n      <th>55</th>\n      <th>56</th>\n      <th>57</th>\n      <th>58</th>\n      <th>59</th>\n      <th>60</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0200</td>\n      <td>0.0371</td>\n      <td>0.0428</td>\n      <td>0.0207</td>\n      <td>0.0954</td>\n      <td>0.0986</td>\n      <td>0.1539</td>\n      <td>0.1601</td>\n      <td>0.3109</td>\n      <td>0.2111</td>\n      <td>...</td>\n      <td>0.0027</td>\n      <td>0.0065</td>\n      <td>0.0159</td>\n      <td>0.0072</td>\n      <td>0.0167</td>\n      <td>0.0180</td>\n      <td>0.0084</td>\n      <td>0.0090</td>\n      <td>0.0032</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0453</td>\n      <td>0.0523</td>\n      <td>0.0843</td>\n      <td>0.0689</td>\n      <td>0.1183</td>\n      <td>0.2583</td>\n      <td>0.2156</td>\n      <td>0.3481</td>\n      <td>0.3337</td>\n      <td>0.2872</td>\n      <td>...</td>\n      <td>0.0084</td>\n      <td>0.0089</td>\n      <td>0.0048</td>\n      <td>0.0094</td>\n      <td>0.0191</td>\n      <td>0.0140</td>\n      <td>0.0049</td>\n      <td>0.0052</td>\n      <td>0.0044</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0262</td>\n      <td>0.0582</td>\n      <td>0.1099</td>\n      <td>0.1083</td>\n      <td>0.0974</td>\n      <td>0.2280</td>\n      <td>0.2431</td>\n      <td>0.3771</td>\n      <td>0.5598</td>\n      <td>0.6194</td>\n      <td>...</td>\n      <td>0.0232</td>\n      <td>0.0166</td>\n      <td>0.0095</td>\n      <td>0.0180</td>\n      <td>0.0244</td>\n      <td>0.0316</td>\n      <td>0.0164</td>\n      <td>0.0095</td>\n      <td>0.0078</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0100</td>\n      <td>0.0171</td>\n      <td>0.0623</td>\n      <td>0.0205</td>\n      <td>0.0205</td>\n      <td>0.0368</td>\n      <td>0.1098</td>\n      <td>0.1276</td>\n      <td>0.0598</td>\n      <td>0.1264</td>\n      <td>...</td>\n      <td>0.0121</td>\n      <td>0.0036</td>\n      <td>0.0150</td>\n      <td>0.0085</td>\n      <td>0.0073</td>\n      <td>0.0050</td>\n      <td>0.0044</td>\n      <td>0.0040</td>\n      <td>0.0117</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0762</td>\n      <td>0.0666</td>\n      <td>0.0481</td>\n      <td>0.0394</td>\n      <td>0.0590</td>\n      <td>0.0649</td>\n      <td>0.1209</td>\n      <td>0.2467</td>\n      <td>0.3564</td>\n      <td>0.4459</td>\n      <td>...</td>\n      <td>0.0031</td>\n      <td>0.0054</td>\n      <td>0.0105</td>\n      <td>0.0110</td>\n      <td>0.0015</td>\n      <td>0.0072</td>\n      <td>0.0048</td>\n      <td>0.0107</td>\n      <td>0.0094</td>\n      <td>R</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 61 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"R is fot  >>> rock**\n*M is for >>> Mine**","metadata":{}},{"cell_type":"code","source":"df.tail()","metadata":{"execution":{"iopub.status.busy":"2024-06-21T09:49:56.940344Z","iopub.execute_input":"2024-06-21T09:49:56.940751Z","iopub.status.idle":"2024-06-21T09:49:56.968104Z","shell.execute_reply.started":"2024-06-21T09:49:56.940719Z","shell.execute_reply":"2024-06-21T09:49:56.966961Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"         0       1       2       3       4       5       6       7       8   \\\n203  0.0187  0.0346  0.0168  0.0177  0.0393  0.1630  0.2028  0.1694  0.2328   \n204  0.0323  0.0101  0.0298  0.0564  0.0760  0.0958  0.0990  0.1018  0.1030   \n205  0.0522  0.0437  0.0180  0.0292  0.0351  0.1171  0.1257  0.1178  0.1258   \n206  0.0303  0.0353  0.0490  0.0608  0.0167  0.1354  0.1465  0.1123  0.1945   \n207  0.0260  0.0363  0.0136  0.0272  0.0214  0.0338  0.0655  0.1400  0.1843   \n\n         9   ...      51      52      53      54      55      56      57  \\\n203  0.2684  ...  0.0116  0.0098  0.0199  0.0033  0.0101  0.0065  0.0115   \n204  0.2154  ...  0.0061  0.0093  0.0135  0.0063  0.0063  0.0034  0.0032   \n205  0.2529  ...  0.0160  0.0029  0.0051  0.0062  0.0089  0.0140  0.0138   \n206  0.2354  ...  0.0086  0.0046  0.0126  0.0036  0.0035  0.0034  0.0079   \n207  0.2354  ...  0.0146  0.0129  0.0047  0.0039  0.0061  0.0040  0.0036   \n\n         58      59  60  \n203  0.0193  0.0157   M  \n204  0.0062  0.0067   M  \n205  0.0077  0.0031   M  \n206  0.0036  0.0048   M  \n207  0.0061  0.0115   M  \n\n[5 rows x 61 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>51</th>\n      <th>52</th>\n      <th>53</th>\n      <th>54</th>\n      <th>55</th>\n      <th>56</th>\n      <th>57</th>\n      <th>58</th>\n      <th>59</th>\n      <th>60</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>203</th>\n      <td>0.0187</td>\n      <td>0.0346</td>\n      <td>0.0168</td>\n      <td>0.0177</td>\n      <td>0.0393</td>\n      <td>0.1630</td>\n      <td>0.2028</td>\n      <td>0.1694</td>\n      <td>0.2328</td>\n      <td>0.2684</td>\n      <td>...</td>\n      <td>0.0116</td>\n      <td>0.0098</td>\n      <td>0.0199</td>\n      <td>0.0033</td>\n      <td>0.0101</td>\n      <td>0.0065</td>\n      <td>0.0115</td>\n      <td>0.0193</td>\n      <td>0.0157</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>204</th>\n      <td>0.0323</td>\n      <td>0.0101</td>\n      <td>0.0298</td>\n      <td>0.0564</td>\n      <td>0.0760</td>\n      <td>0.0958</td>\n      <td>0.0990</td>\n      <td>0.1018</td>\n      <td>0.1030</td>\n      <td>0.2154</td>\n      <td>...</td>\n      <td>0.0061</td>\n      <td>0.0093</td>\n      <td>0.0135</td>\n      <td>0.0063</td>\n      <td>0.0063</td>\n      <td>0.0034</td>\n      <td>0.0032</td>\n      <td>0.0062</td>\n      <td>0.0067</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>205</th>\n      <td>0.0522</td>\n      <td>0.0437</td>\n      <td>0.0180</td>\n      <td>0.0292</td>\n      <td>0.0351</td>\n      <td>0.1171</td>\n      <td>0.1257</td>\n      <td>0.1178</td>\n      <td>0.1258</td>\n      <td>0.2529</td>\n      <td>...</td>\n      <td>0.0160</td>\n      <td>0.0029</td>\n      <td>0.0051</td>\n      <td>0.0062</td>\n      <td>0.0089</td>\n      <td>0.0140</td>\n      <td>0.0138</td>\n      <td>0.0077</td>\n      <td>0.0031</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>206</th>\n      <td>0.0303</td>\n      <td>0.0353</td>\n      <td>0.0490</td>\n      <td>0.0608</td>\n      <td>0.0167</td>\n      <td>0.1354</td>\n      <td>0.1465</td>\n      <td>0.1123</td>\n      <td>0.1945</td>\n      <td>0.2354</td>\n      <td>...</td>\n      <td>0.0086</td>\n      <td>0.0046</td>\n      <td>0.0126</td>\n      <td>0.0036</td>\n      <td>0.0035</td>\n      <td>0.0034</td>\n      <td>0.0079</td>\n      <td>0.0036</td>\n      <td>0.0048</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>207</th>\n      <td>0.0260</td>\n      <td>0.0363</td>\n      <td>0.0136</td>\n      <td>0.0272</td>\n      <td>0.0214</td>\n      <td>0.0338</td>\n      <td>0.0655</td>\n      <td>0.1400</td>\n      <td>0.1843</td>\n      <td>0.2354</td>\n      <td>...</td>\n      <td>0.0146</td>\n      <td>0.0129</td>\n      <td>0.0047</td>\n      <td>0.0039</td>\n      <td>0.0061</td>\n      <td>0.0040</td>\n      <td>0.0036</td>\n      <td>0.0061</td>\n      <td>0.0115</td>\n      <td>M</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 61 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-21T08:42:12.095301Z","iopub.execute_input":"2024-06-21T08:42:12.095759Z","iopub.status.idle":"2024-06-21T08:42:12.114561Z","shell.execute_reply.started":"2024-06-21T08:42:12.095725Z","shell.execute_reply":"2024-06-21T08:42:12.113062Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 208 entries, 0 to 207\nData columns (total 61 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   0       208 non-null    float64\n 1   1       208 non-null    float64\n 2   2       208 non-null    float64\n 3   3       208 non-null    float64\n 4   4       208 non-null    float64\n 5   5       208 non-null    float64\n 6   6       208 non-null    float64\n 7   7       208 non-null    float64\n 8   8       208 non-null    float64\n 9   9       208 non-null    float64\n 10  10      208 non-null    float64\n 11  11      208 non-null    float64\n 12  12      208 non-null    float64\n 13  13      208 non-null    float64\n 14  14      208 non-null    float64\n 15  15      208 non-null    float64\n 16  16      208 non-null    float64\n 17  17      208 non-null    float64\n 18  18      208 non-null    float64\n 19  19      208 non-null    float64\n 20  20      208 non-null    float64\n 21  21      208 non-null    float64\n 22  22      208 non-null    float64\n 23  23      208 non-null    float64\n 24  24      208 non-null    float64\n 25  25      208 non-null    float64\n 26  26      208 non-null    float64\n 27  27      208 non-null    float64\n 28  28      208 non-null    float64\n 29  29      208 non-null    float64\n 30  30      208 non-null    float64\n 31  31      208 non-null    float64\n 32  32      208 non-null    float64\n 33  33      208 non-null    float64\n 34  34      208 non-null    float64\n 35  35      208 non-null    float64\n 36  36      208 non-null    float64\n 37  37      208 non-null    float64\n 38  38      208 non-null    float64\n 39  39      208 non-null    float64\n 40  40      208 non-null    float64\n 41  41      208 non-null    float64\n 42  42      208 non-null    float64\n 43  43      208 non-null    float64\n 44  44      208 non-null    float64\n 45  45      208 non-null    float64\n 46  46      208 non-null    float64\n 47  47      208 non-null    float64\n 48  48      208 non-null    float64\n 49  49      208 non-null    float64\n 50  50      208 non-null    float64\n 51  51      208 non-null    float64\n 52  52      208 non-null    float64\n 53  53      208 non-null    float64\n 54  54      208 non-null    float64\n 55  55      208 non-null    float64\n 56  56      208 non-null    float64\n 57  57      208 non-null    float64\n 58  58      208 non-null    float64\n 59  59      208 non-null    float64\n 60  60      208 non-null    object \ndtypes: float64(60), object(1)\nmemory usage: 99.2+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-21T08:21:45.341951Z","iopub.execute_input":"2024-06-21T08:21:45.342424Z","iopub.status.idle":"2024-06-21T08:21:45.351827Z","shell.execute_reply.started":"2024-06-21T08:21:45.342389Z","shell.execute_reply":"2024-06-21T08:21:45.350429Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"(207, 61)"},"metadata":{}}]},{"cell_type":"code","source":"df.describe","metadata":{"execution":{"iopub.status.busy":"2024-06-21T09:51:33.013060Z","iopub.execute_input":"2024-06-21T09:51:33.014090Z","iopub.status.idle":"2024-06-21T09:51:33.036646Z","shell.execute_reply.started":"2024-06-21T09:51:33.014051Z","shell.execute_reply":"2024-06-21T09:51:33.035478Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"<bound method NDFrame.describe of          0       1       2       3       4       5       6       7       8   \\\n0    0.0200  0.0371  0.0428  0.0207  0.0954  0.0986  0.1539  0.1601  0.3109   \n1    0.0453  0.0523  0.0843  0.0689  0.1183  0.2583  0.2156  0.3481  0.3337   \n2    0.0262  0.0582  0.1099  0.1083  0.0974  0.2280  0.2431  0.3771  0.5598   \n3    0.0100  0.0171  0.0623  0.0205  0.0205  0.0368  0.1098  0.1276  0.0598   \n4    0.0762  0.0666  0.0481  0.0394  0.0590  0.0649  0.1209  0.2467  0.3564   \n..      ...     ...     ...     ...     ...     ...     ...     ...     ...   \n203  0.0187  0.0346  0.0168  0.0177  0.0393  0.1630  0.2028  0.1694  0.2328   \n204  0.0323  0.0101  0.0298  0.0564  0.0760  0.0958  0.0990  0.1018  0.1030   \n205  0.0522  0.0437  0.0180  0.0292  0.0351  0.1171  0.1257  0.1178  0.1258   \n206  0.0303  0.0353  0.0490  0.0608  0.0167  0.1354  0.1465  0.1123  0.1945   \n207  0.0260  0.0363  0.0136  0.0272  0.0214  0.0338  0.0655  0.1400  0.1843   \n\n         9   ...      51      52      53      54      55      56      57  \\\n0    0.2111  ...  0.0027  0.0065  0.0159  0.0072  0.0167  0.0180  0.0084   \n1    0.2872  ...  0.0084  0.0089  0.0048  0.0094  0.0191  0.0140  0.0049   \n2    0.6194  ...  0.0232  0.0166  0.0095  0.0180  0.0244  0.0316  0.0164   \n3    0.1264  ...  0.0121  0.0036  0.0150  0.0085  0.0073  0.0050  0.0044   \n4    0.4459  ...  0.0031  0.0054  0.0105  0.0110  0.0015  0.0072  0.0048   \n..      ...  ...     ...     ...     ...     ...     ...     ...     ...   \n203  0.2684  ...  0.0116  0.0098  0.0199  0.0033  0.0101  0.0065  0.0115   \n204  0.2154  ...  0.0061  0.0093  0.0135  0.0063  0.0063  0.0034  0.0032   \n205  0.2529  ...  0.0160  0.0029  0.0051  0.0062  0.0089  0.0140  0.0138   \n206  0.2354  ...  0.0086  0.0046  0.0126  0.0036  0.0035  0.0034  0.0079   \n207  0.2354  ...  0.0146  0.0129  0.0047  0.0039  0.0061  0.0040  0.0036   \n\n         58      59  60  \n0    0.0090  0.0032   R  \n1    0.0052  0.0044   R  \n2    0.0095  0.0078   R  \n3    0.0040  0.0117   R  \n4    0.0107  0.0094   R  \n..      ...     ...  ..  \n203  0.0193  0.0157   M  \n204  0.0062  0.0067   M  \n205  0.0077  0.0031   M  \n206  0.0036  0.0048   M  \n207  0.0061  0.0115   M  \n\n[208 rows x 61 columns]>"},"metadata":{}}]},{"cell_type":"markdown","source":"split** the input and output into 2 parts....**\ninput=X**; output=Y","metadata":{}},{"cell_type":"code","source":"X= df.drop(columns=60,axis=1)\nY= df[60]","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:32:25.604610Z","iopub.execute_input":"2024-06-21T11:32:25.604986Z","iopub.status.idle":"2024-06-21T11:32:25.625315Z","shell.execute_reply.started":"2024-06-21T11:32:25.604956Z","shell.execute_reply":"2024-06-21T11:32:25.623974Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"X.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-21T10:01:48.809921Z","iopub.execute_input":"2024-06-21T10:01:48.810724Z","iopub.status.idle":"2024-06-21T10:01:48.816763Z","shell.execute_reply.started":"2024-06-21T10:01:48.810689Z","shell.execute_reply":"2024-06-21T10:01:48.815772Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"(208, 60)"},"metadata":{}}]},{"cell_type":"code","source":"Y.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-21T10:02:04.260362Z","iopub.execute_input":"2024-06-21T10:02:04.260760Z","iopub.status.idle":"2024-06-21T10:02:04.267475Z","shell.execute_reply.started":"2024-06-21T10:02:04.260728Z","shell.execute_reply":"2024-06-21T10:02:04.266285Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"(208,)"},"metadata":{}}]},{"cell_type":"code","source":"Y.head","metadata":{"execution":{"iopub.status.busy":"2024-06-21T10:02:22.750402Z","iopub.execute_input":"2024-06-21T10:02:22.750838Z","iopub.status.idle":"2024-06-21T10:02:22.759228Z","shell.execute_reply.started":"2024-06-21T10:02:22.750804Z","shell.execute_reply":"2024-06-21T10:02:22.758230Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"<bound method NDFrame.head of 0      R\n1      R\n2      R\n3      R\n4      R\n      ..\n203    M\n204    M\n205    M\n206    M\n207    M\nName: 60, Length: 208, dtype: object>"},"metadata":{}}]},{"cell_type":"code","source":"\ntotal=df.isnull().sum().sort_values(ascending=False)\npercent=(df.isnull().sum()/df.isnull().count()*100).sort_values(ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-19T08:52:48.622654Z","iopub.execute_input":"2024-06-19T08:52:48.623020Z","iopub.status.idle":"2024-06-19T08:52:48.632252Z","shell.execute_reply.started":"2024-06-19T08:52:48.622990Z","shell.execute_reply":"2024-06-19T08:52:48.630972Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-19T08:56:57.247376Z","iopub.execute_input":"2024-06-19T08:56:57.248407Z","iopub.status.idle":"2024-06-19T08:56:57.298879Z","shell.execute_reply.started":"2024-06-19T08:56:57.248359Z","shell.execute_reply":"2024-06-19T08:56:57.297541Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"here no data cleaning is required as there are no data missing..","metadata":{}},{"cell_type":"markdown","source":"**Now it's to SPLIT the data into TEST and TRAIN **\n\nwe  have made 30% data in testing nd 70% data in training","metadata":{}},{"cell_type":"code","source":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size= 0.3,random_state=1)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:04.567359Z","iopub.execute_input":"2024-06-21T11:42:04.567774Z","iopub.status.idle":"2024-06-21T11:42:04.574961Z","shell.execute_reply.started":"2024-06-21T11:42:04.567733Z","shell.execute_reply":"2024-06-21T11:42:04.573949Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:32:38.353732Z","iopub.execute_input":"2024-06-21T11:32:38.354715Z","iopub.status.idle":"2024-06-21T11:32:38.361827Z","shell.execute_reply.started":"2024-06-21T11:32:38.354671Z","shell.execute_reply":"2024-06-21T11:32:38.360730Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"(166, 60)"},"metadata":{}}]},{"cell_type":"code","source":"X_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-21T10:11:27.974601Z","iopub.execute_input":"2024-06-21T10:11:27.975025Z","iopub.status.idle":"2024-06-21T10:11:27.981670Z","shell.execute_reply.started":"2024-06-21T10:11:27.974991Z","shell.execute_reply":"2024-06-21T10:11:27.980617Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"(42, 60)"},"metadata":{}}]},{"cell_type":"markdown","source":"Step 5 - is to train the model through Logistc Regression","metadata":{}},{"cell_type":"code","source":"model=LogisticRegression()","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:33:02.543920Z","iopub.execute_input":"2024-06-21T11:33:02.544322Z","iopub.status.idle":"2024-06-21T11:33:02.549571Z","shell.execute_reply.started":"2024-06-21T11:33:02.544289Z","shell.execute_reply":"2024-06-21T11:33:02.548327Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"model.fit(X_train,Y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:15.497450Z","iopub.execute_input":"2024-06-21T11:42:15.497811Z","iopub.status.idle":"2024-06-21T11:42:15.517682Z","shell.execute_reply.started":"2024-06-21T11:42:15.497782Z","shell.execute_reply":"2024-06-21T11:42:15.516219Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"LogisticRegression()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"X_train_predic=model.predict(X_train)\ntrain_data_acc=accuracy_score(X_train_predic,Y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:24.807434Z","iopub.execute_input":"2024-06-21T11:42:24.807806Z","iopub.status.idle":"2024-06-21T11:42:24.816382Z","shell.execute_reply.started":"2024-06-21T11:42:24.807776Z","shell.execute_reply":"2024-06-21T11:42:24.815209Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"print(\"Training data accuracy: \",train_data_acc)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:30.297101Z","iopub.execute_input":"2024-06-21T11:42:30.297482Z","iopub.status.idle":"2024-06-21T11:42:30.302878Z","shell.execute_reply.started":"2024-06-21T11:42:30.297451Z","shell.execute_reply":"2024-06-21T11:42:30.301815Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"Training data accuracy:  0.8413793103448276\n","output_type":"stream"}]},{"cell_type":"markdown","source":"step 6-- now we need to check the test dat accuracy**","metadata":{}},{"cell_type":"code","source":"X_test_predic=model.predict(X_test)\ntest_data_acc=accuracy_score(X_test_predic,Y_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:35.667629Z","iopub.execute_input":"2024-06-21T11:42:35.668108Z","iopub.status.idle":"2024-06-21T11:42:35.679766Z","shell.execute_reply.started":"2024-06-21T11:42:35.668068Z","shell.execute_reply":"2024-06-21T11:42:35.678454Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"print(\"Test data accuracy: \",test_data_acc)","metadata":{"execution":{"iopub.status.busy":"2024-06-21T11:42:44.397741Z","iopub.execute_input":"2024-06-21T11:42:44.398117Z","iopub.status.idle":"2024-06-21T11:42:44.404645Z","shell.execute_reply.started":"2024-06-21T11:42:44.398088Z","shell.execute_reply":"2024-06-21T11:42:44.402908Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"Test data accuracy:  0.7777777777777778\n","output_type":"stream"}]}]}